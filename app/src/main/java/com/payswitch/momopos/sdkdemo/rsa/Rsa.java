package com.payswitch.momopos.sdkdemo.rsa;

import android.os.Bundle;
import android.os.RemoteException;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import androidx.appcompat.app.AppCompatActivity;

import com.payswitch.momopos.R;
import com.payswitch.momopos.sdkdemo.util.ByteUtil;

import wangpos.sdk4.libkeymanagerbinder.Key;


public class Rsa extends AppCompatActivity {
    Button btnImportRSAPubKey, btnEraseAsymKey,buttonquitrsa;
    private Key mKey;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_rsa);
        btnEraseAsymKey = (Button) findViewById(R.id.buttonEraseAsymKey);
        btnImportRSAPubKey = (Button) findViewById(R.id.buttonImportRSAPubKey);
        buttonquitrsa = (Button) findViewById(R.id.buttonquitrsa);
        new Thread() {
            @Override
            public void run() {
                mKey = new Key(getApplicationContext());
            }
        }.start();
        btnEraseAsymKey.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                eraseasymkey();
            }
        });
        btnImportRSAPubKey.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                importrsapublickey();
            }
        });
        buttonquitrsa.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }

    private void importrsapublickey(){
        byte[] KeyModulus = {
                (byte)0xF8,(byte)0xF9,0x71,(byte)0xA2,0x3D,(byte)0xF5,0x18,(byte)0xCA,(byte)0xD5,0x7C,0x7E,0x16,0x6A,0x4E,(byte)0xFC,0x38,0x27,(byte)0xD9,
                (byte)0xD2,0x5E,0x03,(byte)0x82,0x29,(byte)0xE0,
                (byte)0x9C,0x54,0x15,(byte)0xE8,0x12,0x21,0x40,(byte)0xA4,(byte)0xB0,0x01,(byte)0xF2,(byte)0xF4,(byte)0xE8,0x56,(byte)0xEF,0x7B,(byte)0xB6,
                0x3D,(byte)0xDB,0x03,0x3B,0x0C,0x68,0x5C,
                (byte)0xA6,(byte)0xE7,(byte)0xD0,0x30,0x5F,(byte)0x9E,(byte)0xB1,0x2A,0x04,0x7C,0x63,0x60,(byte)0xAB,0x79,0x55,(byte)0xB2,0x32,(byte)0x8E,
                0x65,0x25,0x2B,(byte)0xA7,(byte)0xCC,0x00,
                0x7F,0x7C,0x34,(byte)0xA6,(byte)0xE6,(byte)0xB7,(byte)0xB5,(byte)0xFB,(byte)0x81,(byte)0xF2,0x44,(byte)0xC5,(byte)0xE7,(byte)0xA6,(byte)0xC4,
                0x7B,(byte)0x9F,0x42,(byte)0x9C,0x6B,0x2F,0x68,0x47,(byte)0xD2,
                (byte)0x94,0x0B,0x6D,(byte)0xB4,(byte)0xD2,0x0B,0x49,0x0E,(byte)0xA7,(byte)0x93,0x63,(byte)0xD7,(byte)0x9D,0x67,0x6A,(byte)0xAC,0x00,
                (byte)0x9E,(byte)0xFF,0x39,(byte)0xB7,(byte)0x9F,(byte)0xC7,0x3A,
                0x20,0x21,(byte)0xA9,(byte)0xCB,(byte)0xBF,0x71,0x2B,0x4F,0x0D,0x24,(byte)0xEB,0x32,(byte)0xF5,(byte)0xC1,0x1A,0x31,(byte)0xFE,
                0x3B,0x09,0x25,0x22,0x1E,(byte)0x84,0x35,
                (byte)0xDF,0x2D,(byte)0x93,(byte)0x83,0x71,0x39,(byte)0xE1,(byte)0xD0,(byte)0x83,0x68,0x4A,0x6F,(byte)0xDF,0x76,0x64,(byte)0x88,
                (byte)0xB9,0x40,(byte)0xE8,0x4C,0x76,(byte)0xB3,(byte)0xBA,0x7D,
                0x23,0x25,0x4F,(byte)0x89,(byte)0x82,0x42,0x5D,(byte)0xF1,0x54,(byte)0xD9,(byte)0x97,(byte)0xD9,(byte)0xB1,(byte)0xB5,0x17,
                0x56,0x70,0x6E,0x6F,(byte)0x98,0x36,0x7F,0x10,0x17,
                (byte)0xE8,(byte)0xF8,0x7C,0x0A,0x1A,(byte)0xE0,(byte)0xC0,(byte)0xB8,0x28,0x19,(byte)0xCF,(byte)0x9E,(byte)0xF1,(byte)0xBB,
                0x39,(byte)0xAD,0x3B,(byte)0x8E,(byte)0xD6,0x57,0x06,(byte)0x84,0x43,(byte)0x96,
                0x69,0x05,(byte)0x9B,(byte)0xBC,(byte)0xA3,(byte)0x9A,(byte)0xD9,(byte)0xA5,(byte)0xFD,(byte)0xD5,0x61,(byte)0xBF,0x7F,(byte)0xB6,
                (byte)0xBF,0x1E,(byte)0xEF,0x3C,(byte)0xB4,0x0E,(byte)0x80,0x4C,(byte)0xB6,(byte)0xF2,
                (byte)0xFE,0x13,(byte)0x8B,(byte)0xEA,0x3F,(byte)0xFD,0x7F,(byte)0xCE,(byte)0xE6,(byte)0x98,(byte)0x84,0x15,0x54,0x64,(byte)0xDC,(byte)0x87
        };

        byte[] keyLen = new byte[2];
        keyLen[0] = (byte)0x08;
        keyLen[1] = (byte)0x00;
        byte[] KeyPubExp = new byte[]{0x00,0x01,0x00,0x01};
        byte[] outdata = new byte[20];
        try {
            mKey.ImportRSAPubKey(0x01, 0x01, 2048,KeyModulus, ByteUtil.bytes2Int(KeyPubExp),outdata);
            Log.i("Rsa", "importrsapublickey: "+ByteUtil.bytes2HexString(outdata));
            Log.i("Rsa", "importrsapublickey: "+outdata[0]);
            Log.i("Rsa", "importrsapublickey: "+outdata[1]);

        } catch (RemoteException e) {
            e.printStackTrace();
        }
    }

    private void eraseasymkey(){
        try {
            mKey.EraseAsymKey(2);

        } catch (RemoteException e) {
            e.printStackTrace();
        }
    }
}
